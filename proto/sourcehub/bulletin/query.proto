syntax = "proto3";

package sourcehub.bulletin;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sourcehub/bulletin/params.proto";
import "sourcehub/bulletin/post.proto";

option go_package = "github.com/sourcenetwork/sourcehub/x/bulletin/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sourcenetwork/sourcehub/bulletin/params";
  
  }
  
  // Queries a list of ReadPost items.
  rpc ReadPost (QueryReadPostRequest) returns (QueryReadPostResponse) {
    option (google.api.http).get = "/sourcenetwork/sourcehub/bulletin/read_post/{namespace}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryReadPostRequest {
  string namespace = 1;
}

message QueryReadPostResponse {
  Post post = 1;
}

