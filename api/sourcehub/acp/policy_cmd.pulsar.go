// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package acp

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_SignedPolicyCmd           protoreflect.MessageDescriptor
	fd_SignedPolicyCmd_payload   protoreflect.FieldDescriptor
	fd_SignedPolicyCmd_signature protoreflect.FieldDescriptor
)

func init() {
	file_sourcehub_acp_policy_cmd_proto_init()
	md_SignedPolicyCmd = File_sourcehub_acp_policy_cmd_proto.Messages().ByName("SignedPolicyCmd")
	fd_SignedPolicyCmd_payload = md_SignedPolicyCmd.Fields().ByName("payload")
	fd_SignedPolicyCmd_signature = md_SignedPolicyCmd.Fields().ByName("signature")
}

var _ protoreflect.Message = (*fastReflection_SignedPolicyCmd)(nil)

type fastReflection_SignedPolicyCmd SignedPolicyCmd

func (x *SignedPolicyCmd) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SignedPolicyCmd)(x)
}

func (x *SignedPolicyCmd) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SignedPolicyCmd_messageType fastReflection_SignedPolicyCmd_messageType
var _ protoreflect.MessageType = fastReflection_SignedPolicyCmd_messageType{}

type fastReflection_SignedPolicyCmd_messageType struct{}

func (x fastReflection_SignedPolicyCmd_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SignedPolicyCmd)(nil)
}
func (x fastReflection_SignedPolicyCmd_messageType) New() protoreflect.Message {
	return new(fastReflection_SignedPolicyCmd)
}
func (x fastReflection_SignedPolicyCmd_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SignedPolicyCmd
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SignedPolicyCmd) Descriptor() protoreflect.MessageDescriptor {
	return md_SignedPolicyCmd
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SignedPolicyCmd) Type() protoreflect.MessageType {
	return _fastReflection_SignedPolicyCmd_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SignedPolicyCmd) New() protoreflect.Message {
	return new(fastReflection_SignedPolicyCmd)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SignedPolicyCmd) Interface() protoreflect.ProtoMessage {
	return (*SignedPolicyCmd)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SignedPolicyCmd) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Payload != nil {
		value := protoreflect.ValueOfMessage(x.Payload.ProtoReflect())
		if !f(fd_SignedPolicyCmd_payload, value) {
			return
		}
	}
	if len(x.Signature) != 0 {
		value := protoreflect.ValueOfBytes(x.Signature)
		if !f(fd_SignedPolicyCmd_signature, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SignedPolicyCmd) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcehub.acp.SignedPolicyCmd.payload":
		return x.Payload != nil
	case "sourcehub.acp.SignedPolicyCmd.signature":
		return len(x.Signature) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SignedPolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SignedPolicyCmd does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignedPolicyCmd) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcehub.acp.SignedPolicyCmd.payload":
		x.Payload = nil
	case "sourcehub.acp.SignedPolicyCmd.signature":
		x.Signature = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SignedPolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SignedPolicyCmd does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SignedPolicyCmd) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcehub.acp.SignedPolicyCmd.payload":
		value := x.Payload
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sourcehub.acp.SignedPolicyCmd.signature":
		value := x.Signature
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SignedPolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SignedPolicyCmd does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignedPolicyCmd) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcehub.acp.SignedPolicyCmd.payload":
		x.Payload = value.Message().Interface().(*PolicyCmdPayload)
	case "sourcehub.acp.SignedPolicyCmd.signature":
		x.Signature = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SignedPolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SignedPolicyCmd does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignedPolicyCmd) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.SignedPolicyCmd.payload":
		if x.Payload == nil {
			x.Payload = new(PolicyCmdPayload)
		}
		return protoreflect.ValueOfMessage(x.Payload.ProtoReflect())
	case "sourcehub.acp.SignedPolicyCmd.signature":
		panic(fmt.Errorf("field signature of message sourcehub.acp.SignedPolicyCmd is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SignedPolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SignedPolicyCmd does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SignedPolicyCmd) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.SignedPolicyCmd.payload":
		m := new(PolicyCmdPayload)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sourcehub.acp.SignedPolicyCmd.signature":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SignedPolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SignedPolicyCmd does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SignedPolicyCmd) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcehub.acp.SignedPolicyCmd", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SignedPolicyCmd) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignedPolicyCmd) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SignedPolicyCmd) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SignedPolicyCmd) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SignedPolicyCmd)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Payload != nil {
			l = options.Size(x.Payload)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SignedPolicyCmd)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signature) > 0 {
			i -= len(x.Signature)
			copy(dAtA[i:], x.Signature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signature)))
			i--
			dAtA[i] = 0x12
		}
		if x.Payload != nil {
			encoded, err := options.Marshal(x.Payload)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SignedPolicyCmd)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SignedPolicyCmd: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SignedPolicyCmd: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Payload == nil {
					x.Payload = &PolicyCmdPayload{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Payload); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signature = append(x.Signature[:0], dAtA[iNdEx:postIndex]...)
				if x.Signature == nil {
					x.Signature = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_PolicyCmdPayload                   protoreflect.MessageDescriptor
	fd_PolicyCmdPayload_actor             protoreflect.FieldDescriptor
	fd_PolicyCmdPayload_issued_height     protoreflect.FieldDescriptor
	fd_PolicyCmdPayload_expiration_height protoreflect.FieldDescriptor
	fd_PolicyCmdPayload_creation_time     protoreflect.FieldDescriptor
	fd_PolicyCmdPayload_policy_id         protoreflect.FieldDescriptor
	fd_PolicyCmdPayload_cmd               protoreflect.FieldDescriptor
)

func init() {
	file_sourcehub_acp_policy_cmd_proto_init()
	md_PolicyCmdPayload = File_sourcehub_acp_policy_cmd_proto.Messages().ByName("PolicyCmdPayload")
	fd_PolicyCmdPayload_actor = md_PolicyCmdPayload.Fields().ByName("actor")
	fd_PolicyCmdPayload_issued_height = md_PolicyCmdPayload.Fields().ByName("issued_height")
	fd_PolicyCmdPayload_expiration_height = md_PolicyCmdPayload.Fields().ByName("expiration_height")
	fd_PolicyCmdPayload_creation_time = md_PolicyCmdPayload.Fields().ByName("creation_time")
	fd_PolicyCmdPayload_policy_id = md_PolicyCmdPayload.Fields().ByName("policy_id")
	fd_PolicyCmdPayload_cmd = md_PolicyCmdPayload.Fields().ByName("cmd")
}

var _ protoreflect.Message = (*fastReflection_PolicyCmdPayload)(nil)

type fastReflection_PolicyCmdPayload PolicyCmdPayload

func (x *PolicyCmdPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_PolicyCmdPayload)(x)
}

func (x *PolicyCmdPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_PolicyCmdPayload_messageType fastReflection_PolicyCmdPayload_messageType
var _ protoreflect.MessageType = fastReflection_PolicyCmdPayload_messageType{}

type fastReflection_PolicyCmdPayload_messageType struct{}

func (x fastReflection_PolicyCmdPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_PolicyCmdPayload)(nil)
}
func (x fastReflection_PolicyCmdPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_PolicyCmdPayload)
}
func (x fastReflection_PolicyCmdPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_PolicyCmdPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_PolicyCmdPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_PolicyCmdPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_PolicyCmdPayload) Type() protoreflect.MessageType {
	return _fastReflection_PolicyCmdPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_PolicyCmdPayload) New() protoreflect.Message {
	return new(fastReflection_PolicyCmdPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_PolicyCmdPayload) Interface() protoreflect.ProtoMessage {
	return (*PolicyCmdPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_PolicyCmdPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Actor != "" {
		value := protoreflect.ValueOfString(x.Actor)
		if !f(fd_PolicyCmdPayload_actor, value) {
			return
		}
	}
	if x.IssuedHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.IssuedHeight)
		if !f(fd_PolicyCmdPayload_issued_height, value) {
			return
		}
	}
	if x.ExpirationHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ExpirationHeight)
		if !f(fd_PolicyCmdPayload_expiration_height, value) {
			return
		}
	}
	if x.CreationTime != nil {
		value := protoreflect.ValueOfMessage(x.CreationTime.ProtoReflect())
		if !f(fd_PolicyCmdPayload_creation_time, value) {
			return
		}
	}
	if x.PolicyId != "" {
		value := protoreflect.ValueOfString(x.PolicyId)
		if !f(fd_PolicyCmdPayload_policy_id, value) {
			return
		}
	}
	if x.Cmd != nil {
		value := protoreflect.ValueOfMessage(x.Cmd.ProtoReflect())
		if !f(fd_PolicyCmdPayload_cmd, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_PolicyCmdPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.actor":
		return x.Actor != ""
	case "sourcehub.acp.PolicyCmdPayload.issued_height":
		return x.IssuedHeight != uint64(0)
	case "sourcehub.acp.PolicyCmdPayload.expiration_height":
		return x.ExpirationHeight != uint64(0)
	case "sourcehub.acp.PolicyCmdPayload.creation_time":
		return x.CreationTime != nil
	case "sourcehub.acp.PolicyCmdPayload.policy_id":
		return x.PolicyId != ""
	case "sourcehub.acp.PolicyCmdPayload.cmd":
		return x.Cmd != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PolicyCmdPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.actor":
		x.Actor = ""
	case "sourcehub.acp.PolicyCmdPayload.issued_height":
		x.IssuedHeight = uint64(0)
	case "sourcehub.acp.PolicyCmdPayload.expiration_height":
		x.ExpirationHeight = uint64(0)
	case "sourcehub.acp.PolicyCmdPayload.creation_time":
		x.CreationTime = nil
	case "sourcehub.acp.PolicyCmdPayload.policy_id":
		x.PolicyId = ""
	case "sourcehub.acp.PolicyCmdPayload.cmd":
		x.Cmd = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_PolicyCmdPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.actor":
		value := x.Actor
		return protoreflect.ValueOfString(value)
	case "sourcehub.acp.PolicyCmdPayload.issued_height":
		value := x.IssuedHeight
		return protoreflect.ValueOfUint64(value)
	case "sourcehub.acp.PolicyCmdPayload.expiration_height":
		value := x.ExpirationHeight
		return protoreflect.ValueOfUint64(value)
	case "sourcehub.acp.PolicyCmdPayload.creation_time":
		value := x.CreationTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sourcehub.acp.PolicyCmdPayload.policy_id":
		value := x.PolicyId
		return protoreflect.ValueOfString(value)
	case "sourcehub.acp.PolicyCmdPayload.cmd":
		value := x.Cmd
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PolicyCmdPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.actor":
		x.Actor = value.Interface().(string)
	case "sourcehub.acp.PolicyCmdPayload.issued_height":
		x.IssuedHeight = value.Uint()
	case "sourcehub.acp.PolicyCmdPayload.expiration_height":
		x.ExpirationHeight = value.Uint()
	case "sourcehub.acp.PolicyCmdPayload.creation_time":
		x.CreationTime = value.Message().Interface().(*timestamppb.Timestamp)
	case "sourcehub.acp.PolicyCmdPayload.policy_id":
		x.PolicyId = value.Interface().(string)
	case "sourcehub.acp.PolicyCmdPayload.cmd":
		x.Cmd = value.Message().Interface().(*PolicyCmdPayload_PolicyCmd)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PolicyCmdPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.creation_time":
		if x.CreationTime == nil {
			x.CreationTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.CreationTime.ProtoReflect())
	case "sourcehub.acp.PolicyCmdPayload.cmd":
		if x.Cmd == nil {
			x.Cmd = new(PolicyCmdPayload_PolicyCmd)
		}
		return protoreflect.ValueOfMessage(x.Cmd.ProtoReflect())
	case "sourcehub.acp.PolicyCmdPayload.actor":
		panic(fmt.Errorf("field actor of message sourcehub.acp.PolicyCmdPayload is not mutable"))
	case "sourcehub.acp.PolicyCmdPayload.issued_height":
		panic(fmt.Errorf("field issued_height of message sourcehub.acp.PolicyCmdPayload is not mutable"))
	case "sourcehub.acp.PolicyCmdPayload.expiration_height":
		panic(fmt.Errorf("field expiration_height of message sourcehub.acp.PolicyCmdPayload is not mutable"))
	case "sourcehub.acp.PolicyCmdPayload.policy_id":
		panic(fmt.Errorf("field policy_id of message sourcehub.acp.PolicyCmdPayload is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_PolicyCmdPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.actor":
		return protoreflect.ValueOfString("")
	case "sourcehub.acp.PolicyCmdPayload.issued_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sourcehub.acp.PolicyCmdPayload.expiration_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sourcehub.acp.PolicyCmdPayload.creation_time":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sourcehub.acp.PolicyCmdPayload.policy_id":
		return protoreflect.ValueOfString("")
	case "sourcehub.acp.PolicyCmdPayload.cmd":
		m := new(PolicyCmdPayload_PolicyCmd)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_PolicyCmdPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcehub.acp.PolicyCmdPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_PolicyCmdPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PolicyCmdPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_PolicyCmdPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_PolicyCmdPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*PolicyCmdPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Actor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IssuedHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.IssuedHeight))
		}
		if x.ExpirationHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.ExpirationHeight))
		}
		if x.CreationTime != nil {
			l = options.Size(x.CreationTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Cmd != nil {
			l = options.Size(x.Cmd)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*PolicyCmdPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Cmd != nil {
			encoded, err := options.Marshal(x.Cmd)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.PolicyId) > 0 {
			i -= len(x.PolicyId)
			copy(dAtA[i:], x.PolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PolicyId)))
			i--
			dAtA[i] = 0x2a
		}
		if x.CreationTime != nil {
			encoded, err := options.Marshal(x.CreationTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.ExpirationHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExpirationHeight))
			i--
			dAtA[i] = 0x18
		}
		if x.IssuedHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.IssuedHeight))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Actor) > 0 {
			i -= len(x.Actor)
			copy(dAtA[i:], x.Actor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Actor)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*PolicyCmdPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PolicyCmdPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PolicyCmdPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Actor", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Actor = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IssuedHeight", wireType)
				}
				x.IssuedHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.IssuedHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpirationHeight", wireType)
				}
				x.ExpirationHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExpirationHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreationTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CreationTime == nil {
					x.CreationTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CreationTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Cmd == nil {
					x.Cmd = &PolicyCmdPayload_PolicyCmd{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Cmd); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_PolicyCmdPayload_PolicyCmd                         protoreflect.MessageDescriptor
	fd_PolicyCmdPayload_PolicyCmd_set_relationship_cmd    protoreflect.FieldDescriptor
	fd_PolicyCmdPayload_PolicyCmd_delete_relationship_cmd protoreflect.FieldDescriptor
	fd_PolicyCmdPayload_PolicyCmd_register_object_cmd     protoreflect.FieldDescriptor
	fd_PolicyCmdPayload_PolicyCmd_unregister_object_cmd   protoreflect.FieldDescriptor
)

func init() {
	file_sourcehub_acp_policy_cmd_proto_init()
	md_PolicyCmdPayload_PolicyCmd = File_sourcehub_acp_policy_cmd_proto.Messages().ByName("PolicyCmdPayload").Messages().ByName("PolicyCmd")
	fd_PolicyCmdPayload_PolicyCmd_set_relationship_cmd = md_PolicyCmdPayload_PolicyCmd.Fields().ByName("set_relationship_cmd")
	fd_PolicyCmdPayload_PolicyCmd_delete_relationship_cmd = md_PolicyCmdPayload_PolicyCmd.Fields().ByName("delete_relationship_cmd")
	fd_PolicyCmdPayload_PolicyCmd_register_object_cmd = md_PolicyCmdPayload_PolicyCmd.Fields().ByName("register_object_cmd")
	fd_PolicyCmdPayload_PolicyCmd_unregister_object_cmd = md_PolicyCmdPayload_PolicyCmd.Fields().ByName("unregister_object_cmd")
}

var _ protoreflect.Message = (*fastReflection_PolicyCmdPayload_PolicyCmd)(nil)

type fastReflection_PolicyCmdPayload_PolicyCmd PolicyCmdPayload_PolicyCmd

func (x *PolicyCmdPayload_PolicyCmd) ProtoReflect() protoreflect.Message {
	return (*fastReflection_PolicyCmdPayload_PolicyCmd)(x)
}

func (x *PolicyCmdPayload_PolicyCmd) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_PolicyCmdPayload_PolicyCmd_messageType fastReflection_PolicyCmdPayload_PolicyCmd_messageType
var _ protoreflect.MessageType = fastReflection_PolicyCmdPayload_PolicyCmd_messageType{}

type fastReflection_PolicyCmdPayload_PolicyCmd_messageType struct{}

func (x fastReflection_PolicyCmdPayload_PolicyCmd_messageType) Zero() protoreflect.Message {
	return (*fastReflection_PolicyCmdPayload_PolicyCmd)(nil)
}
func (x fastReflection_PolicyCmdPayload_PolicyCmd_messageType) New() protoreflect.Message {
	return new(fastReflection_PolicyCmdPayload_PolicyCmd)
}
func (x fastReflection_PolicyCmdPayload_PolicyCmd_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_PolicyCmdPayload_PolicyCmd
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) Descriptor() protoreflect.MessageDescriptor {
	return md_PolicyCmdPayload_PolicyCmd
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) Type() protoreflect.MessageType {
	return _fastReflection_PolicyCmdPayload_PolicyCmd_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) New() protoreflect.Message {
	return new(fastReflection_PolicyCmdPayload_PolicyCmd)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) Interface() protoreflect.ProtoMessage {
	return (*PolicyCmdPayload_PolicyCmd)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Cmd != nil {
		switch o := x.Cmd.(type) {
		case *PolicyCmdPayload_PolicyCmd_SetRelationshipCmd:
			v := o.SetRelationshipCmd
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_PolicyCmdPayload_PolicyCmd_set_relationship_cmd, value) {
				return
			}
		case *PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd:
			v := o.DeleteRelationshipCmd
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_PolicyCmdPayload_PolicyCmd_delete_relationship_cmd, value) {
				return
			}
		case *PolicyCmdPayload_PolicyCmd_RegisterObjectCmd:
			v := o.RegisterObjectCmd
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_PolicyCmdPayload_PolicyCmd_register_object_cmd, value) {
				return
			}
		case *PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd:
			v := o.UnregisterObjectCmd
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_PolicyCmdPayload_PolicyCmd_unregister_object_cmd, value) {
				return
			}
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.set_relationship_cmd":
		if x.Cmd == nil {
			return false
		} else if _, ok := x.Cmd.(*PolicyCmdPayload_PolicyCmd_SetRelationshipCmd); ok {
			return true
		} else {
			return false
		}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.delete_relationship_cmd":
		if x.Cmd == nil {
			return false
		} else if _, ok := x.Cmd.(*PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd); ok {
			return true
		} else {
			return false
		}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.register_object_cmd":
		if x.Cmd == nil {
			return false
		} else if _, ok := x.Cmd.(*PolicyCmdPayload_PolicyCmd_RegisterObjectCmd); ok {
			return true
		} else {
			return false
		}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.unregister_object_cmd":
		if x.Cmd == nil {
			return false
		} else if _, ok := x.Cmd.(*PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd); ok {
			return true
		} else {
			return false
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload.PolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload.PolicyCmd does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.set_relationship_cmd":
		x.Cmd = nil
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.delete_relationship_cmd":
		x.Cmd = nil
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.register_object_cmd":
		x.Cmd = nil
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.unregister_object_cmd":
		x.Cmd = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload.PolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload.PolicyCmd does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.set_relationship_cmd":
		if x.Cmd == nil {
			return protoreflect.ValueOfMessage((*SetRelationshipCmd)(nil).ProtoReflect())
		} else if v, ok := x.Cmd.(*PolicyCmdPayload_PolicyCmd_SetRelationshipCmd); ok {
			return protoreflect.ValueOfMessage(v.SetRelationshipCmd.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*SetRelationshipCmd)(nil).ProtoReflect())
		}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.delete_relationship_cmd":
		if x.Cmd == nil {
			return protoreflect.ValueOfMessage((*DeleteRelationshipCmd)(nil).ProtoReflect())
		} else if v, ok := x.Cmd.(*PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd); ok {
			return protoreflect.ValueOfMessage(v.DeleteRelationshipCmd.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*DeleteRelationshipCmd)(nil).ProtoReflect())
		}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.register_object_cmd":
		if x.Cmd == nil {
			return protoreflect.ValueOfMessage((*RegisterObjectCmd)(nil).ProtoReflect())
		} else if v, ok := x.Cmd.(*PolicyCmdPayload_PolicyCmd_RegisterObjectCmd); ok {
			return protoreflect.ValueOfMessage(v.RegisterObjectCmd.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*RegisterObjectCmd)(nil).ProtoReflect())
		}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.unregister_object_cmd":
		if x.Cmd == nil {
			return protoreflect.ValueOfMessage((*UnregisterObjectCmd)(nil).ProtoReflect())
		} else if v, ok := x.Cmd.(*PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd); ok {
			return protoreflect.ValueOfMessage(v.UnregisterObjectCmd.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*UnregisterObjectCmd)(nil).ProtoReflect())
		}
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload.PolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload.PolicyCmd does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.set_relationship_cmd":
		cv := value.Message().Interface().(*SetRelationshipCmd)
		x.Cmd = &PolicyCmdPayload_PolicyCmd_SetRelationshipCmd{SetRelationshipCmd: cv}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.delete_relationship_cmd":
		cv := value.Message().Interface().(*DeleteRelationshipCmd)
		x.Cmd = &PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd{DeleteRelationshipCmd: cv}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.register_object_cmd":
		cv := value.Message().Interface().(*RegisterObjectCmd)
		x.Cmd = &PolicyCmdPayload_PolicyCmd_RegisterObjectCmd{RegisterObjectCmd: cv}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.unregister_object_cmd":
		cv := value.Message().Interface().(*UnregisterObjectCmd)
		x.Cmd = &PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd{UnregisterObjectCmd: cv}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload.PolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload.PolicyCmd does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.set_relationship_cmd":
		if x.Cmd == nil {
			value := &SetRelationshipCmd{}
			oneofValue := &PolicyCmdPayload_PolicyCmd_SetRelationshipCmd{SetRelationshipCmd: value}
			x.Cmd = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Cmd.(type) {
		case *PolicyCmdPayload_PolicyCmd_SetRelationshipCmd:
			return protoreflect.ValueOfMessage(m.SetRelationshipCmd.ProtoReflect())
		default:
			value := &SetRelationshipCmd{}
			oneofValue := &PolicyCmdPayload_PolicyCmd_SetRelationshipCmd{SetRelationshipCmd: value}
			x.Cmd = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.delete_relationship_cmd":
		if x.Cmd == nil {
			value := &DeleteRelationshipCmd{}
			oneofValue := &PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd{DeleteRelationshipCmd: value}
			x.Cmd = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Cmd.(type) {
		case *PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd:
			return protoreflect.ValueOfMessage(m.DeleteRelationshipCmd.ProtoReflect())
		default:
			value := &DeleteRelationshipCmd{}
			oneofValue := &PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd{DeleteRelationshipCmd: value}
			x.Cmd = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.register_object_cmd":
		if x.Cmd == nil {
			value := &RegisterObjectCmd{}
			oneofValue := &PolicyCmdPayload_PolicyCmd_RegisterObjectCmd{RegisterObjectCmd: value}
			x.Cmd = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Cmd.(type) {
		case *PolicyCmdPayload_PolicyCmd_RegisterObjectCmd:
			return protoreflect.ValueOfMessage(m.RegisterObjectCmd.ProtoReflect())
		default:
			value := &RegisterObjectCmd{}
			oneofValue := &PolicyCmdPayload_PolicyCmd_RegisterObjectCmd{RegisterObjectCmd: value}
			x.Cmd = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.unregister_object_cmd":
		if x.Cmd == nil {
			value := &UnregisterObjectCmd{}
			oneofValue := &PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd{UnregisterObjectCmd: value}
			x.Cmd = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Cmd.(type) {
		case *PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd:
			return protoreflect.ValueOfMessage(m.UnregisterObjectCmd.ProtoReflect())
		default:
			value := &UnregisterObjectCmd{}
			oneofValue := &PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd{UnregisterObjectCmd: value}
			x.Cmd = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload.PolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload.PolicyCmd does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.set_relationship_cmd":
		value := &SetRelationshipCmd{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.delete_relationship_cmd":
		value := &DeleteRelationshipCmd{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.register_object_cmd":
		value := &RegisterObjectCmd{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.unregister_object_cmd":
		value := &UnregisterObjectCmd{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.PolicyCmdPayload.PolicyCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.PolicyCmdPayload.PolicyCmd does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	case "sourcehub.acp.PolicyCmdPayload.PolicyCmd.cmd":
		if x.Cmd == nil {
			return nil
		}
		switch x.Cmd.(type) {
		case *PolicyCmdPayload_PolicyCmd_SetRelationshipCmd:
			return x.Descriptor().Fields().ByName("set_relationship_cmd")
		case *PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd:
			return x.Descriptor().Fields().ByName("delete_relationship_cmd")
		case *PolicyCmdPayload_PolicyCmd_RegisterObjectCmd:
			return x.Descriptor().Fields().ByName("register_object_cmd")
		case *PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd:
			return x.Descriptor().Fields().ByName("unregister_object_cmd")
		}
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcehub.acp.PolicyCmdPayload.PolicyCmd", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_PolicyCmdPayload_PolicyCmd) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*PolicyCmdPayload_PolicyCmd)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		switch x := x.Cmd.(type) {
		case *PolicyCmdPayload_PolicyCmd_SetRelationshipCmd:
			if x == nil {
				break
			}
			l = options.Size(x.SetRelationshipCmd)
			n += 1 + l + runtime.Sov(uint64(l))
		case *PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd:
			if x == nil {
				break
			}
			l = options.Size(x.DeleteRelationshipCmd)
			n += 1 + l + runtime.Sov(uint64(l))
		case *PolicyCmdPayload_PolicyCmd_RegisterObjectCmd:
			if x == nil {
				break
			}
			l = options.Size(x.RegisterObjectCmd)
			n += 1 + l + runtime.Sov(uint64(l))
		case *PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd:
			if x == nil {
				break
			}
			l = options.Size(x.UnregisterObjectCmd)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*PolicyCmdPayload_PolicyCmd)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		switch x := x.Cmd.(type) {
		case *PolicyCmdPayload_PolicyCmd_SetRelationshipCmd:
			encoded, err := options.Marshal(x.SetRelationshipCmd)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		case *PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd:
			encoded, err := options.Marshal(x.DeleteRelationshipCmd)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		case *PolicyCmdPayload_PolicyCmd_RegisterObjectCmd:
			encoded, err := options.Marshal(x.RegisterObjectCmd)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		case *PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd:
			encoded, err := options.Marshal(x.UnregisterObjectCmd)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*PolicyCmdPayload_PolicyCmd)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PolicyCmdPayload_PolicyCmd: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PolicyCmdPayload_PolicyCmd: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SetRelationshipCmd", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &SetRelationshipCmd{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Cmd = &PolicyCmdPayload_PolicyCmd_SetRelationshipCmd{v}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DeleteRelationshipCmd", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &DeleteRelationshipCmd{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Cmd = &PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd{v}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RegisterObjectCmd", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &RegisterObjectCmd{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Cmd = &PolicyCmdPayload_PolicyCmd_RegisterObjectCmd{v}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnregisterObjectCmd", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &UnregisterObjectCmd{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Cmd = &PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd{v}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetRelationshipCmd              protoreflect.MessageDescriptor
	fd_SetRelationshipCmd_relationship protoreflect.FieldDescriptor
)

func init() {
	file_sourcehub_acp_policy_cmd_proto_init()
	md_SetRelationshipCmd = File_sourcehub_acp_policy_cmd_proto.Messages().ByName("SetRelationshipCmd")
	fd_SetRelationshipCmd_relationship = md_SetRelationshipCmd.Fields().ByName("relationship")
}

var _ protoreflect.Message = (*fastReflection_SetRelationshipCmd)(nil)

type fastReflection_SetRelationshipCmd SetRelationshipCmd

func (x *SetRelationshipCmd) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetRelationshipCmd)(x)
}

func (x *SetRelationshipCmd) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetRelationshipCmd_messageType fastReflection_SetRelationshipCmd_messageType
var _ protoreflect.MessageType = fastReflection_SetRelationshipCmd_messageType{}

type fastReflection_SetRelationshipCmd_messageType struct{}

func (x fastReflection_SetRelationshipCmd_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetRelationshipCmd)(nil)
}
func (x fastReflection_SetRelationshipCmd_messageType) New() protoreflect.Message {
	return new(fastReflection_SetRelationshipCmd)
}
func (x fastReflection_SetRelationshipCmd_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetRelationshipCmd
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetRelationshipCmd) Descriptor() protoreflect.MessageDescriptor {
	return md_SetRelationshipCmd
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetRelationshipCmd) Type() protoreflect.MessageType {
	return _fastReflection_SetRelationshipCmd_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetRelationshipCmd) New() protoreflect.Message {
	return new(fastReflection_SetRelationshipCmd)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetRelationshipCmd) Interface() protoreflect.ProtoMessage {
	return (*SetRelationshipCmd)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetRelationshipCmd) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Relationship != nil {
		value := protoreflect.ValueOfMessage(x.Relationship.ProtoReflect())
		if !f(fd_SetRelationshipCmd_relationship, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetRelationshipCmd) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcehub.acp.SetRelationshipCmd.relationship":
		return x.Relationship != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SetRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SetRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetRelationshipCmd) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcehub.acp.SetRelationshipCmd.relationship":
		x.Relationship = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SetRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SetRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetRelationshipCmd) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcehub.acp.SetRelationshipCmd.relationship":
		value := x.Relationship
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SetRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SetRelationshipCmd does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetRelationshipCmd) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcehub.acp.SetRelationshipCmd.relationship":
		x.Relationship = value.Message().Interface().(*Relationship)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SetRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SetRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetRelationshipCmd) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.SetRelationshipCmd.relationship":
		if x.Relationship == nil {
			x.Relationship = new(Relationship)
		}
		return protoreflect.ValueOfMessage(x.Relationship.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SetRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SetRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetRelationshipCmd) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.SetRelationshipCmd.relationship":
		m := new(Relationship)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.SetRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.SetRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetRelationshipCmd) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcehub.acp.SetRelationshipCmd", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetRelationshipCmd) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetRelationshipCmd) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetRelationshipCmd) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetRelationshipCmd) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetRelationshipCmd)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Relationship != nil {
			l = options.Size(x.Relationship)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetRelationshipCmd)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Relationship != nil {
			encoded, err := options.Marshal(x.Relationship)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetRelationshipCmd)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetRelationshipCmd: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetRelationshipCmd: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Relationship", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Relationship == nil {
					x.Relationship = &Relationship{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Relationship); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DeleteRelationshipCmd              protoreflect.MessageDescriptor
	fd_DeleteRelationshipCmd_relationship protoreflect.FieldDescriptor
)

func init() {
	file_sourcehub_acp_policy_cmd_proto_init()
	md_DeleteRelationshipCmd = File_sourcehub_acp_policy_cmd_proto.Messages().ByName("DeleteRelationshipCmd")
	fd_DeleteRelationshipCmd_relationship = md_DeleteRelationshipCmd.Fields().ByName("relationship")
}

var _ protoreflect.Message = (*fastReflection_DeleteRelationshipCmd)(nil)

type fastReflection_DeleteRelationshipCmd DeleteRelationshipCmd

func (x *DeleteRelationshipCmd) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DeleteRelationshipCmd)(x)
}

func (x *DeleteRelationshipCmd) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DeleteRelationshipCmd_messageType fastReflection_DeleteRelationshipCmd_messageType
var _ protoreflect.MessageType = fastReflection_DeleteRelationshipCmd_messageType{}

type fastReflection_DeleteRelationshipCmd_messageType struct{}

func (x fastReflection_DeleteRelationshipCmd_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DeleteRelationshipCmd)(nil)
}
func (x fastReflection_DeleteRelationshipCmd_messageType) New() protoreflect.Message {
	return new(fastReflection_DeleteRelationshipCmd)
}
func (x fastReflection_DeleteRelationshipCmd_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DeleteRelationshipCmd
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DeleteRelationshipCmd) Descriptor() protoreflect.MessageDescriptor {
	return md_DeleteRelationshipCmd
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DeleteRelationshipCmd) Type() protoreflect.MessageType {
	return _fastReflection_DeleteRelationshipCmd_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DeleteRelationshipCmd) New() protoreflect.Message {
	return new(fastReflection_DeleteRelationshipCmd)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DeleteRelationshipCmd) Interface() protoreflect.ProtoMessage {
	return (*DeleteRelationshipCmd)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DeleteRelationshipCmd) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Relationship != nil {
		value := protoreflect.ValueOfMessage(x.Relationship.ProtoReflect())
		if !f(fd_DeleteRelationshipCmd_relationship, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DeleteRelationshipCmd) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcehub.acp.DeleteRelationshipCmd.relationship":
		return x.Relationship != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.DeleteRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.DeleteRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DeleteRelationshipCmd) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcehub.acp.DeleteRelationshipCmd.relationship":
		x.Relationship = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.DeleteRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.DeleteRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DeleteRelationshipCmd) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcehub.acp.DeleteRelationshipCmd.relationship":
		value := x.Relationship
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.DeleteRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.DeleteRelationshipCmd does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DeleteRelationshipCmd) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcehub.acp.DeleteRelationshipCmd.relationship":
		x.Relationship = value.Message().Interface().(*Relationship)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.DeleteRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.DeleteRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DeleteRelationshipCmd) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.DeleteRelationshipCmd.relationship":
		if x.Relationship == nil {
			x.Relationship = new(Relationship)
		}
		return protoreflect.ValueOfMessage(x.Relationship.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.DeleteRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.DeleteRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DeleteRelationshipCmd) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.DeleteRelationshipCmd.relationship":
		m := new(Relationship)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.DeleteRelationshipCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.DeleteRelationshipCmd does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DeleteRelationshipCmd) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcehub.acp.DeleteRelationshipCmd", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DeleteRelationshipCmd) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DeleteRelationshipCmd) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DeleteRelationshipCmd) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DeleteRelationshipCmd) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DeleteRelationshipCmd)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Relationship != nil {
			l = options.Size(x.Relationship)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DeleteRelationshipCmd)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Relationship != nil {
			encoded, err := options.Marshal(x.Relationship)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DeleteRelationshipCmd)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DeleteRelationshipCmd: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DeleteRelationshipCmd: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Relationship", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Relationship == nil {
					x.Relationship = &Relationship{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Relationship); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RegisterObjectCmd        protoreflect.MessageDescriptor
	fd_RegisterObjectCmd_object protoreflect.FieldDescriptor
)

func init() {
	file_sourcehub_acp_policy_cmd_proto_init()
	md_RegisterObjectCmd = File_sourcehub_acp_policy_cmd_proto.Messages().ByName("RegisterObjectCmd")
	fd_RegisterObjectCmd_object = md_RegisterObjectCmd.Fields().ByName("object")
}

var _ protoreflect.Message = (*fastReflection_RegisterObjectCmd)(nil)

type fastReflection_RegisterObjectCmd RegisterObjectCmd

func (x *RegisterObjectCmd) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RegisterObjectCmd)(x)
}

func (x *RegisterObjectCmd) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RegisterObjectCmd_messageType fastReflection_RegisterObjectCmd_messageType
var _ protoreflect.MessageType = fastReflection_RegisterObjectCmd_messageType{}

type fastReflection_RegisterObjectCmd_messageType struct{}

func (x fastReflection_RegisterObjectCmd_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RegisterObjectCmd)(nil)
}
func (x fastReflection_RegisterObjectCmd_messageType) New() protoreflect.Message {
	return new(fastReflection_RegisterObjectCmd)
}
func (x fastReflection_RegisterObjectCmd_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RegisterObjectCmd
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RegisterObjectCmd) Descriptor() protoreflect.MessageDescriptor {
	return md_RegisterObjectCmd
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RegisterObjectCmd) Type() protoreflect.MessageType {
	return _fastReflection_RegisterObjectCmd_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RegisterObjectCmd) New() protoreflect.Message {
	return new(fastReflection_RegisterObjectCmd)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RegisterObjectCmd) Interface() protoreflect.ProtoMessage {
	return (*RegisterObjectCmd)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RegisterObjectCmd) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Object != nil {
		value := protoreflect.ValueOfMessage(x.Object.ProtoReflect())
		if !f(fd_RegisterObjectCmd_object, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RegisterObjectCmd) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcehub.acp.RegisterObjectCmd.object":
		return x.Object != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.RegisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.RegisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RegisterObjectCmd) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcehub.acp.RegisterObjectCmd.object":
		x.Object = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.RegisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.RegisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RegisterObjectCmd) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcehub.acp.RegisterObjectCmd.object":
		value := x.Object
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.RegisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.RegisterObjectCmd does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RegisterObjectCmd) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcehub.acp.RegisterObjectCmd.object":
		x.Object = value.Message().Interface().(*Object)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.RegisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.RegisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RegisterObjectCmd) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.RegisterObjectCmd.object":
		if x.Object == nil {
			x.Object = new(Object)
		}
		return protoreflect.ValueOfMessage(x.Object.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.RegisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.RegisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RegisterObjectCmd) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.RegisterObjectCmd.object":
		m := new(Object)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.RegisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.RegisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RegisterObjectCmd) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcehub.acp.RegisterObjectCmd", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RegisterObjectCmd) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RegisterObjectCmd) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RegisterObjectCmd) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RegisterObjectCmd) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RegisterObjectCmd)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Object != nil {
			l = options.Size(x.Object)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RegisterObjectCmd)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Object != nil {
			encoded, err := options.Marshal(x.Object)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RegisterObjectCmd)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RegisterObjectCmd: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RegisterObjectCmd: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Object", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Object == nil {
					x.Object = &Object{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Object); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_UnregisterObjectCmd        protoreflect.MessageDescriptor
	fd_UnregisterObjectCmd_object protoreflect.FieldDescriptor
)

func init() {
	file_sourcehub_acp_policy_cmd_proto_init()
	md_UnregisterObjectCmd = File_sourcehub_acp_policy_cmd_proto.Messages().ByName("UnregisterObjectCmd")
	fd_UnregisterObjectCmd_object = md_UnregisterObjectCmd.Fields().ByName("object")
}

var _ protoreflect.Message = (*fastReflection_UnregisterObjectCmd)(nil)

type fastReflection_UnregisterObjectCmd UnregisterObjectCmd

func (x *UnregisterObjectCmd) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UnregisterObjectCmd)(x)
}

func (x *UnregisterObjectCmd) slowProtoReflect() protoreflect.Message {
	mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UnregisterObjectCmd_messageType fastReflection_UnregisterObjectCmd_messageType
var _ protoreflect.MessageType = fastReflection_UnregisterObjectCmd_messageType{}

type fastReflection_UnregisterObjectCmd_messageType struct{}

func (x fastReflection_UnregisterObjectCmd_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UnregisterObjectCmd)(nil)
}
func (x fastReflection_UnregisterObjectCmd_messageType) New() protoreflect.Message {
	return new(fastReflection_UnregisterObjectCmd)
}
func (x fastReflection_UnregisterObjectCmd_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UnregisterObjectCmd
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UnregisterObjectCmd) Descriptor() protoreflect.MessageDescriptor {
	return md_UnregisterObjectCmd
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UnregisterObjectCmd) Type() protoreflect.MessageType {
	return _fastReflection_UnregisterObjectCmd_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UnregisterObjectCmd) New() protoreflect.Message {
	return new(fastReflection_UnregisterObjectCmd)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UnregisterObjectCmd) Interface() protoreflect.ProtoMessage {
	return (*UnregisterObjectCmd)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UnregisterObjectCmd) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Object != nil {
		value := protoreflect.ValueOfMessage(x.Object.ProtoReflect())
		if !f(fd_UnregisterObjectCmd_object, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UnregisterObjectCmd) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sourcehub.acp.UnregisterObjectCmd.object":
		return x.Object != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.UnregisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.UnregisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UnregisterObjectCmd) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sourcehub.acp.UnregisterObjectCmd.object":
		x.Object = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.UnregisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.UnregisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UnregisterObjectCmd) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sourcehub.acp.UnregisterObjectCmd.object":
		value := x.Object
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.UnregisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.UnregisterObjectCmd does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UnregisterObjectCmd) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sourcehub.acp.UnregisterObjectCmd.object":
		x.Object = value.Message().Interface().(*Object)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.UnregisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.UnregisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UnregisterObjectCmd) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.UnregisterObjectCmd.object":
		if x.Object == nil {
			x.Object = new(Object)
		}
		return protoreflect.ValueOfMessage(x.Object.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.UnregisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.UnregisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UnregisterObjectCmd) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sourcehub.acp.UnregisterObjectCmd.object":
		m := new(Object)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sourcehub.acp.UnregisterObjectCmd"))
		}
		panic(fmt.Errorf("message sourcehub.acp.UnregisterObjectCmd does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UnregisterObjectCmd) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sourcehub.acp.UnregisterObjectCmd", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UnregisterObjectCmd) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UnregisterObjectCmd) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UnregisterObjectCmd) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UnregisterObjectCmd) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UnregisterObjectCmd)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Object != nil {
			l = options.Size(x.Object)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UnregisterObjectCmd)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Object != nil {
			encoded, err := options.Marshal(x.Object)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UnregisterObjectCmd)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UnregisterObjectCmd: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UnregisterObjectCmd: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Object", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Object == nil {
					x.Object = &Object{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Object); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: sourcehub/acp/policy_cmd.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SignedPolicyCmd represents a Command issued by an Actor in the context of a Policy
// The command represents an instruction to be executed
// The message type contains a signature which is used to authenticate the Command's Actor
type SignedPolicyCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// payload contains the command context
	Payload *PolicyCmdPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// signature is a signature of the payload.
	// The signature is generated using the VerificationMethod / Authorization fields
	// specificied by the DID document of the Actor.
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SignedPolicyCmd) Reset() {
	*x = SignedPolicyCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedPolicyCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedPolicyCmd) ProtoMessage() {}

// Deprecated: Use SignedPolicyCmd.ProtoReflect.Descriptor instead.
func (*SignedPolicyCmd) Descriptor() ([]byte, []int) {
	return file_sourcehub_acp_policy_cmd_proto_rawDescGZIP(), []int{0}
}

func (x *SignedPolicyCmd) GetPayload() *PolicyCmdPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SignedPolicyCmd) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// PolicyCmdPayload represents the payload containing the context of the issued command
type PolicyCmdPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// actor is a did string representing the actor which issued the command
	Actor string `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	// issued_height is the SourceHub block height of when the Payload was created
	IssuedHeight uint64 `protobuf:"varint,2,opt,name=issued_height,json=issuedHeight,proto3" json:"issued_height,omitempty"`
	// expiration_height is the SourceHub block height at which this Command Payload is no longer valid.
	// This field is mandatory and is used to prevent replay attacks
	ExpirationHeight uint64 `protobuf:"varint,3,opt,name=expiration_height,json=expirationHeight,proto3" json:"expiration_height,omitempty"`
	// creation_time contains a client generated timestamp for the creation of the command.
	// This is used only as metadata and isn't trusted
	CreationTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	// policy_id is the ID of the policy under which the Command will be executed
	PolicyId string                      `protobuf:"bytes,5,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Cmd      *PolicyCmdPayload_PolicyCmd `protobuf:"bytes,6,opt,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *PolicyCmdPayload) Reset() {
	*x = PolicyCmdPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyCmdPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyCmdPayload) ProtoMessage() {}

// Deprecated: Use PolicyCmdPayload.ProtoReflect.Descriptor instead.
func (*PolicyCmdPayload) Descriptor() ([]byte, []int) {
	return file_sourcehub_acp_policy_cmd_proto_rawDescGZIP(), []int{1}
}

func (x *PolicyCmdPayload) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *PolicyCmdPayload) GetIssuedHeight() uint64 {
	if x != nil {
		return x.IssuedHeight
	}
	return 0
}

func (x *PolicyCmdPayload) GetExpirationHeight() uint64 {
	if x != nil {
		return x.ExpirationHeight
	}
	return 0
}

func (x *PolicyCmdPayload) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *PolicyCmdPayload) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *PolicyCmdPayload) GetCmd() *PolicyCmdPayload_PolicyCmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

// SetRelationshipCmd sets a Relationship in a Policy
type SetRelationshipCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relationship *Relationship `protobuf:"bytes,1,opt,name=relationship,proto3" json:"relationship,omitempty"`
}

func (x *SetRelationshipCmd) Reset() {
	*x = SetRelationshipCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRelationshipCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRelationshipCmd) ProtoMessage() {}

// Deprecated: Use SetRelationshipCmd.ProtoReflect.Descriptor instead.
func (*SetRelationshipCmd) Descriptor() ([]byte, []int) {
	return file_sourcehub_acp_policy_cmd_proto_rawDescGZIP(), []int{2}
}

func (x *SetRelationshipCmd) GetRelationship() *Relationship {
	if x != nil {
		return x.Relationship
	}
	return nil
}

// DeleteRelationshipCmd removes a Relationship in a Policy
type DeleteRelationshipCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relationship *Relationship `protobuf:"bytes,1,opt,name=relationship,proto3" json:"relationship,omitempty"`
}

func (x *DeleteRelationshipCmd) Reset() {
	*x = DeleteRelationshipCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationshipCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationshipCmd) ProtoMessage() {}

// Deprecated: Use DeleteRelationshipCmd.ProtoReflect.Descriptor instead.
func (*DeleteRelationshipCmd) Descriptor() ([]byte, []int) {
	return file_sourcehub_acp_policy_cmd_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRelationshipCmd) GetRelationship() *Relationship {
	if x != nil {
		return x.Relationship
	}
	return nil
}

// RegisterObjectCmd registers an Object in a Policy
type RegisterObjectCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object *Object `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *RegisterObjectCmd) Reset() {
	*x = RegisterObjectCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterObjectCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterObjectCmd) ProtoMessage() {}

// Deprecated: Use RegisterObjectCmd.ProtoReflect.Descriptor instead.
func (*RegisterObjectCmd) Descriptor() ([]byte, []int) {
	return file_sourcehub_acp_policy_cmd_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterObjectCmd) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

// UnregisterObjectCmd unregisters an Object in a Policy
type UnregisterObjectCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object *Object `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *UnregisterObjectCmd) Reset() {
	*x = UnregisterObjectCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterObjectCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterObjectCmd) ProtoMessage() {}

// Deprecated: Use UnregisterObjectCmd.ProtoReflect.Descriptor instead.
func (*UnregisterObjectCmd) Descriptor() ([]byte, []int) {
	return file_sourcehub_acp_policy_cmd_proto_rawDescGZIP(), []int{5}
}

func (x *UnregisterObjectCmd) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

type PolicyCmdPayload_PolicyCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Cmd:
	//
	//	*PolicyCmdPayload_PolicyCmd_SetRelationshipCmd
	//	*PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd
	//	*PolicyCmdPayload_PolicyCmd_RegisterObjectCmd
	//	*PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd
	Cmd isPolicyCmdPayload_PolicyCmd_Cmd `protobuf_oneof:"cmd"`
}

func (x *PolicyCmdPayload_PolicyCmd) Reset() {
	*x = PolicyCmdPayload_PolicyCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sourcehub_acp_policy_cmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyCmdPayload_PolicyCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyCmdPayload_PolicyCmd) ProtoMessage() {}

// Deprecated: Use PolicyCmdPayload_PolicyCmd.ProtoReflect.Descriptor instead.
func (*PolicyCmdPayload_PolicyCmd) Descriptor() ([]byte, []int) {
	return file_sourcehub_acp_policy_cmd_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PolicyCmdPayload_PolicyCmd) GetCmd() isPolicyCmdPayload_PolicyCmd_Cmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *PolicyCmdPayload_PolicyCmd) GetSetRelationshipCmd() *SetRelationshipCmd {
	if x, ok := x.GetCmd().(*PolicyCmdPayload_PolicyCmd_SetRelationshipCmd); ok {
		return x.SetRelationshipCmd
	}
	return nil
}

func (x *PolicyCmdPayload_PolicyCmd) GetDeleteRelationshipCmd() *DeleteRelationshipCmd {
	if x, ok := x.GetCmd().(*PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd); ok {
		return x.DeleteRelationshipCmd
	}
	return nil
}

func (x *PolicyCmdPayload_PolicyCmd) GetRegisterObjectCmd() *RegisterObjectCmd {
	if x, ok := x.GetCmd().(*PolicyCmdPayload_PolicyCmd_RegisterObjectCmd); ok {
		return x.RegisterObjectCmd
	}
	return nil
}

func (x *PolicyCmdPayload_PolicyCmd) GetUnregisterObjectCmd() *UnregisterObjectCmd {
	if x, ok := x.GetCmd().(*PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd); ok {
		return x.UnregisterObjectCmd
	}
	return nil
}

type isPolicyCmdPayload_PolicyCmd_Cmd interface {
	isPolicyCmdPayload_PolicyCmd_Cmd()
}

type PolicyCmdPayload_PolicyCmd_SetRelationshipCmd struct {
	SetRelationshipCmd *SetRelationshipCmd `protobuf:"bytes,2,opt,name=set_relationship_cmd,json=setRelationshipCmd,proto3,oneof"`
}

type PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd struct {
	DeleteRelationshipCmd *DeleteRelationshipCmd `protobuf:"bytes,3,opt,name=delete_relationship_cmd,json=deleteRelationshipCmd,proto3,oneof"`
}

type PolicyCmdPayload_PolicyCmd_RegisterObjectCmd struct {
	RegisterObjectCmd *RegisterObjectCmd `protobuf:"bytes,4,opt,name=register_object_cmd,json=registerObjectCmd,proto3,oneof"`
}

type PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd struct {
	UnregisterObjectCmd *UnregisterObjectCmd `protobuf:"bytes,5,opt,name=unregister_object_cmd,json=unregisterObjectCmd,proto3,oneof"`
}

func (*PolicyCmdPayload_PolicyCmd_SetRelationshipCmd) isPolicyCmdPayload_PolicyCmd_Cmd() {}

func (*PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd) isPolicyCmdPayload_PolicyCmd_Cmd() {}

func (*PolicyCmdPayload_PolicyCmd_RegisterObjectCmd) isPolicyCmdPayload_PolicyCmd_Cmd() {}

func (*PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd) isPolicyCmdPayload_PolicyCmd_Cmd() {}

var File_sourcehub_acp_policy_cmd_proto protoreflect.FileDescriptor

var file_sourcehub_acp_policy_cmd_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2f, 0x61, 0x63, 0x70, 0x2f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2f, 0x61, 0x63, 0x70, 0x2f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x43, 0x6d, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68,
	0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6d, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x8f,
	0x05, 0x0a, 0x10, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6d, 0x64, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2b,
	0x0a, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68,
	0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6d, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6d,
	0x64, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x1a, 0xf7, 0x02, 0x0a, 0x09, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x43, 0x6d, 0x64, 0x12, 0x55, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x61,
	0x63, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x43, 0x6d, 0x64, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6d, 0x64, 0x12, 0x5e, 0x0a, 0x17, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x43,
	0x6d, 0x64, 0x48, 0x00, 0x52, 0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6d, 0x64, 0x12, 0x52, 0x0a, 0x13, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63,
	0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6d, 0x64, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6d, 0x64, 0x12,
	0x58, 0x0a, 0x15, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x2e, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6d, 0x64, 0x48, 0x00, 0x52, 0x13, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6d, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x22, 0x55, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x43, 0x6d, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x22, 0x58, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6d, 0x64,
	0x12, 0x3f, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68,
	0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x22, 0x42, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68,
	0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x44, 0x0a, 0x13, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x2d, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x70, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x98, 0x01, 0x0a, 0x11,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63,
	0x70, 0x42, 0x0e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6d, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2f,
	0x61, 0x63, 0x70, 0xa2, 0x02, 0x03, 0x53, 0x41, 0x58, 0xaa, 0x02, 0x0d, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x41, 0x63, 0x70, 0xca, 0x02, 0x0d, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x68, 0x75, 0x62, 0x5c, 0x41, 0x63, 0x70, 0xe2, 0x02, 0x19, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x68, 0x75, 0x62, 0x5c, 0x41, 0x63, 0x70, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x68, 0x75,
	0x62, 0x3a, 0x3a, 0x41, 0x63, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sourcehub_acp_policy_cmd_proto_rawDescOnce sync.Once
	file_sourcehub_acp_policy_cmd_proto_rawDescData = file_sourcehub_acp_policy_cmd_proto_rawDesc
)

func file_sourcehub_acp_policy_cmd_proto_rawDescGZIP() []byte {
	file_sourcehub_acp_policy_cmd_proto_rawDescOnce.Do(func() {
		file_sourcehub_acp_policy_cmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_sourcehub_acp_policy_cmd_proto_rawDescData)
	})
	return file_sourcehub_acp_policy_cmd_proto_rawDescData
}

var file_sourcehub_acp_policy_cmd_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sourcehub_acp_policy_cmd_proto_goTypes = []interface{}{
	(*SignedPolicyCmd)(nil),            // 0: sourcehub.acp.SignedPolicyCmd
	(*PolicyCmdPayload)(nil),           // 1: sourcehub.acp.PolicyCmdPayload
	(*SetRelationshipCmd)(nil),         // 2: sourcehub.acp.SetRelationshipCmd
	(*DeleteRelationshipCmd)(nil),      // 3: sourcehub.acp.DeleteRelationshipCmd
	(*RegisterObjectCmd)(nil),          // 4: sourcehub.acp.RegisterObjectCmd
	(*UnregisterObjectCmd)(nil),        // 5: sourcehub.acp.UnregisterObjectCmd
	(*PolicyCmdPayload_PolicyCmd)(nil), // 6: sourcehub.acp.PolicyCmdPayload.PolicyCmd
	(*timestamppb.Timestamp)(nil),      // 7: google.protobuf.Timestamp
	(*Relationship)(nil),               // 8: sourcehub.acp.Relationship
	(*Object)(nil),                     // 9: sourcehub.acp.Object
}
var file_sourcehub_acp_policy_cmd_proto_depIdxs = []int32{
	1,  // 0: sourcehub.acp.SignedPolicyCmd.payload:type_name -> sourcehub.acp.PolicyCmdPayload
	7,  // 1: sourcehub.acp.PolicyCmdPayload.creation_time:type_name -> google.protobuf.Timestamp
	6,  // 2: sourcehub.acp.PolicyCmdPayload.cmd:type_name -> sourcehub.acp.PolicyCmdPayload.PolicyCmd
	8,  // 3: sourcehub.acp.SetRelationshipCmd.relationship:type_name -> sourcehub.acp.Relationship
	8,  // 4: sourcehub.acp.DeleteRelationshipCmd.relationship:type_name -> sourcehub.acp.Relationship
	9,  // 5: sourcehub.acp.RegisterObjectCmd.object:type_name -> sourcehub.acp.Object
	9,  // 6: sourcehub.acp.UnregisterObjectCmd.object:type_name -> sourcehub.acp.Object
	2,  // 7: sourcehub.acp.PolicyCmdPayload.PolicyCmd.set_relationship_cmd:type_name -> sourcehub.acp.SetRelationshipCmd
	3,  // 8: sourcehub.acp.PolicyCmdPayload.PolicyCmd.delete_relationship_cmd:type_name -> sourcehub.acp.DeleteRelationshipCmd
	4,  // 9: sourcehub.acp.PolicyCmdPayload.PolicyCmd.register_object_cmd:type_name -> sourcehub.acp.RegisterObjectCmd
	5,  // 10: sourcehub.acp.PolicyCmdPayload.PolicyCmd.unregister_object_cmd:type_name -> sourcehub.acp.UnregisterObjectCmd
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sourcehub_acp_policy_cmd_proto_init() }
func file_sourcehub_acp_policy_cmd_proto_init() {
	if File_sourcehub_acp_policy_cmd_proto != nil {
		return
	}
	file_sourcehub_acp_relationship_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sourcehub_acp_policy_cmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedPolicyCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcehub_acp_policy_cmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyCmdPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcehub_acp_policy_cmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRelationshipCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcehub_acp_policy_cmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelationshipCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcehub_acp_policy_cmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterObjectCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcehub_acp_policy_cmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterObjectCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sourcehub_acp_policy_cmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyCmdPayload_PolicyCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sourcehub_acp_policy_cmd_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*PolicyCmdPayload_PolicyCmd_SetRelationshipCmd)(nil),
		(*PolicyCmdPayload_PolicyCmd_DeleteRelationshipCmd)(nil),
		(*PolicyCmdPayload_PolicyCmd_RegisterObjectCmd)(nil),
		(*PolicyCmdPayload_PolicyCmd_UnregisterObjectCmd)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sourcehub_acp_policy_cmd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sourcehub_acp_policy_cmd_proto_goTypes,
		DependencyIndexes: file_sourcehub_acp_policy_cmd_proto_depIdxs,
		MessageInfos:      file_sourcehub_acp_policy_cmd_proto_msgTypes,
	}.Build()
	File_sourcehub_acp_policy_cmd_proto = out.File
	file_sourcehub_acp_policy_cmd_proto_rawDesc = nil
	file_sourcehub_acp_policy_cmd_proto_goTypes = nil
	file_sourcehub_acp_policy_cmd_proto_depIdxs = nil
}
